# Generated by Django 5.0.2 on 2025-10-18 01:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('contact_type', models.CharField(choices=[('phone', 'Phone Number'), ('email', 'Email Address'), ('address', 'Physical Address'), ('hours', 'Office Hours'), ('social', 'Social Media')], help_text='Type of contact information', max_length=20)),
                ('value', models.TextField(help_text='Contact information value')),
                ('is_primary', models.BooleanField(default=False, help_text='Whether this is the primary contact of this type')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this contact info should be displayed')),
            ],
            options={
                'verbose_name': 'Contact Information',
                'verbose_name_plural': 'Contact Information',
                'ordering': ['contact_type', 'order'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('question', models.CharField(help_text='FAQ question', max_length=500)),
                ('answer', models.TextField(help_text='FAQ answer')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this FAQ should be displayed')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['order', 'question'],
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('title', models.CharField(help_text='Feature title', max_length=200)),
                ('content', models.TextField(help_text='Feature description')),
                ('icon', models.CharField(default='fas fa-lightbulb', help_text='Font Awesome icon class', max_length=50)),
                ('icon_class', models.CharField(default='info', help_text='CSS class for icon styling', max_length=50)),
                ('link_url', models.URLField(blank=True, help_text='Optional link URL')),
                ('link_text', models.CharField(default='Learn More', help_text='Link text', max_length=100)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this feature should be displayed')),
            ],
            options={
                'verbose_name': 'Feature',
                'verbose_name_plural': 'Features',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('site_name', models.CharField(default='NORSU Alumni Network', help_text='The name of the website', max_length=200)),
                ('site_tagline', models.TextField(default='Connect. Grow. Succeed.', help_text='The main tagline displayed on the homepage')),
                ('logo', models.ImageField(blank=True, help_text='Site logo image', null=True, upload_to='cms/logos/')),
                ('contact_email', models.EmailField(default='alumni@norsu.edu.ph', help_text='Primary contact email address', max_length=254)),
                ('contact_phone', models.CharField(default='+63 35 422 6002', help_text='Primary contact phone number', max_length=50)),
                ('contact_address', models.TextField(default='Negros Oriental State University\nKagawasan, Ave. Rizal\nDumaguete City, 6200\nNegros Oriental, Philippines', help_text='Primary contact address')),
                ('facebook_url', models.URLField(blank=True, help_text='Facebook page URL', null=True)),
                ('twitter_url', models.URLField(blank=True, help_text='Twitter profile URL', null=True)),
                ('linkedin_url', models.URLField(blank=True, help_text='LinkedIn page URL', null=True)),
                ('instagram_url', models.URLField(blank=True, help_text='Instagram profile URL', null=True)),
                ('youtube_url', models.URLField(blank=True, help_text='YouTube channel URL', null=True)),
                ('signup_button_text', models.CharField(default='Join the Network', help_text='Text for the signup button', max_length=100)),
                ('login_button_text', models.CharField(default='Member Login', help_text='Text for the login button', max_length=100)),
            ],
            options={
                'verbose_name': 'Site Configuration',
                'verbose_name_plural': 'Site Configuration',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='StaffMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('name', models.CharField(help_text='Full name of the staff member', max_length=200)),
                ('position', models.CharField(help_text='Job title or position', max_length=200)),
                ('department', models.CharField(blank=True, help_text='Department or division', max_length=200)),
                ('bio', models.TextField(blank=True, help_text='Brief biography or description')),
                ('image', models.ImageField(blank=True, help_text='Staff member photo', null=True, upload_to='cms/staff/')),
                ('email', models.EmailField(blank=True, help_text='Contact email address', max_length=254)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this staff member should be displayed')),
            ],
            options={
                'verbose_name': 'Staff Member',
                'verbose_name_plural': 'Staff Members',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StaticPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('page_type', models.CharField(choices=[('about', 'About Us'), ('contact', 'Contact Us'), ('privacy', 'Privacy Policy'), ('terms', 'Terms of Service'), ('faq', 'FAQ'), ('help', 'Help')], help_text='Type of page', max_length=20, unique=True)),
                ('title', models.CharField(help_text='Page title', max_length=200)),
                ('content', models.TextField(help_text='Page content (HTML allowed)')),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for SEO', max_length=160)),
                ('is_published', models.BooleanField(default=True, help_text='Whether this page is published and visible')),
            ],
            options={
                'verbose_name': 'Static Page',
                'verbose_name_plural': 'Static Pages',
                'ordering': ['page_type'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('name', models.CharField(help_text='Name of the person giving the testimonial', max_length=200)),
                ('position', models.CharField(help_text='Job title or position', max_length=200)),
                ('company', models.CharField(blank=True, help_text='Company or organization', max_length=200)),
                ('quote', models.TextField(help_text='Testimonial quote')),
                ('image', models.ImageField(blank=True, help_text='Photo of the person', null=True, upload_to='cms/testimonials/')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this testimonial should be displayed')),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TimelineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('year', models.CharField(help_text='Year or date of the event', max_length=10)),
                ('title', models.CharField(help_text='Title of the timeline event', max_length=200)),
                ('description', models.TextField(help_text='Description of the event')),
                ('icon', models.CharField(default='fas fa-circle', help_text='Font Awesome icon class', max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this timeline item should be displayed')),
            ],
            options={
                'verbose_name': 'Timeline Item',
                'verbose_name_plural': 'Timeline Items',
                'ordering': ['order', 'year'],
            },
        ),
        migrations.CreateModel(
            name='PageSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('section_type', models.CharField(choices=[('hero', 'Hero Section'), ('features', 'Features Section'), ('testimonials', 'Testimonials Section'), ('cta', 'Call to Action Section'), ('announcements', 'Announcements Section'), ('stats', 'Statistics Section')], help_text='Type of section', max_length=20)),
                ('title', models.CharField(help_text='Section title', max_length=200)),
                ('subtitle', models.TextField(blank=True, help_text='Section subtitle or description')),
                ('content', models.TextField(blank=True, help_text='Section content (HTML allowed)')),
                ('image', models.ImageField(blank=True, help_text='Section image', null=True, upload_to='cms/sections/')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this section is active and should be displayed')),
            ],
            options={
                'verbose_name': 'Page Section',
                'verbose_name_plural': 'Page Sections',
                'ordering': ['order', '-created'],
                'indexes': [models.Index(fields=['section_type', 'is_active'], name='cms_pagesec_section_73b6c9_idx'), models.Index(fields=['order'], name='cms_pagesec_order_3d28ca_idx')],
            },
        ),
    ]
