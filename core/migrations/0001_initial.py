# Generated by Django 5.0.2 on 2025-04-21 01:53

import django.db.models.deletion
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EngagementScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('total_points', models.PositiveIntegerField(default=0, help_text='Total engagement points earned')),
                ('level', models.PositiveIntegerField(default=1, help_text='User engagement level')),
                ('last_activity', models.DateTimeField(blank=True, help_text='Timestamp of last engagement activity', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_score', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Engagement Score',
                'verbose_name_plural': 'Engagement Scores',
                'ordering': ['-total_points'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='posts/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True)),
                ('view_count', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='core.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.post')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_type', models.CharField(choices=[('LIKE', 'üëç'), ('LOVE', '‚ù§Ô∏è'), ('HAHA', 'üòÑ'), ('WOW', 'üòÆ'), ('SAD', 'üò¢'), ('ANGRY', 'üò†')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='core.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reaction',
                'verbose_name_plural': 'Reactions',
            },
        ),
        migrations.CreateModel(
            name='UserEngagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time this object was created.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The date and time this object was last modified.', verbose_name='Modified')),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('profile_update', 'Profile Update'), ('group_join', 'Group Join'), ('group_post', 'Group Post'), ('event_rsvp', 'Event RSVP'), ('feedback', 'Feedback Submission'), ('document_upload', 'Document Upload')], default='login', max_length=20)),
                ('points', models.PositiveIntegerField(default=1, help_text='Points earned for this activity')),
                ('description', models.TextField(blank=True, help_text='Optional description of the engagement activity')),
                ('visit_count', models.IntegerField(default=0)),
                ('total_posts', models.IntegerField(default=0)),
                ('total_comments', models.IntegerField(default=0)),
                ('total_reactions', models.IntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Engagement',
                'verbose_name_plural': 'User Engagements',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('HOME', 'Home'), ('WORK', 'Work'), ('OTHER', 'Other')], default='HOME', max_length=10)),
                ('street_address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', django_countries.fields.CountryField(default='PH', max_length=2)),
                ('postal_code', models.CharField(max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'ordering': ['-is_primary', '-created_at'],
                'indexes': [models.Index(fields=['user', 'is_primary'], name='core_addres_user_id_75f14a_idx'), models.Index(fields=['city', 'state', 'country'], name='core_addres_city_80b6d2_idx')],
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(choices=[('PHONE', 'Phone Number'), ('EMAIL', 'Email Address'), ('LINKEDIN', 'LinkedIn Profile'), ('FACEBOOK', 'Facebook Profile'), ('TWITTER', 'Twitter Profile'), ('OTHER', 'Other')], max_length=20)),
                ('contact_value', models.CharField(max_length=255)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contact Information',
                'verbose_name_plural': 'Contact Information',
                'ordering': ['-is_primary', '-created_at'],
                'indexes': [models.Index(fields=['user', 'contact_type', 'is_primary'], name='core_contac_user_id_e9744d_idx')],
                'unique_together': {('user', 'contact_type', 'contact_value')},
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['author', 'created_at'], name='core_post_author__a786a4_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['is_published'], name='core_post_is_publ_01104b_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post', 'created_at'], name='core_commen_post_id_0d7c44_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['author', 'created_at'], name='core_commen_author__a55bfb_idx'),
        ),
        migrations.AddIndex(
            model_name='reaction',
            index=models.Index(fields=['post', 'reaction_type'], name='core_reacti_post_id_c38b9c_idx'),
        ),
        migrations.AddIndex(
            model_name='reaction',
            index=models.Index(fields=['user', 'created_at'], name='core_reacti_user_id_31a201_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reaction',
            unique_together={('user', 'post')},
        ),
    ]
