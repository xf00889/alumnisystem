# Generated by Django 4.2.19 on 2025-05-21 22:56

from django.db import migrations
from django.utils.text import slugify


def add_predefined_categories(apps, schema_editor):
    """
    Add predefined categories for announcements.
    These categories correspond to the hardcoded options in the announcement form template.
    """
    Category = apps.get_model('announcements', 'Category')
    
    # Define the categories with their IDs to match the form template
    categories = [
        {"id": 1, "name": "Campus News", "description": "News and updates about campus activities and developments", "slug": "campus-news"},
        {"id": 2, "name": "Events", "description": "Upcoming events and activities for alumni", "slug": "events"},
        {"id": 3, "name": "Career Opportunities", "description": "Job postings, career advice, and professional development", "slug": "career-opportunities"},
        {"id": 4, "name": "Alumni Spotlight", "description": "Highlighting achievements and stories of alumni", "slug": "alumni-spotlight"},
        {"id": 5, "name": "Fundraising", "description": "Updates on fundraising campaigns and initiatives", "slug": "fundraising"},
        {"id": 6, "name": "Volunteer Opportunities", "description": "Ways to get involved and give back", "slug": "volunteer-opportunities"},
        {"id": 7, "name": "Academic Updates", "description": "News about academic programs and departments", "slug": "academic-updates"},
        {"id": 8, "name": "Community Service", "description": "Community service initiatives and opportunities", "slug": "community-service"}
    ]
    
    # Create or update each category
    for category_data in categories:
        Category.objects.update_or_create(
            id=category_data["id"],
            defaults={
                "name": category_data["name"],
                "description": category_data["description"],
                "slug": category_data["slug"]
            }
        )


def remove_predefined_categories(apps, schema_editor):
    """
    Remove predefined categories when migrating backwards.
    """
    Category = apps.get_model('announcements', 'Category')
    Category.objects.filter(id__in=range(1, 9)).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('announcements', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(add_predefined_categories, remove_predefined_categories),
    ]
